---
import OpenIcon from "@assets/icons/menu.svg";
import CloseIcon from "@assets/icons/close.svg";
import SunIcon from "@assets/icons/sun.svg";
import MoonIcon from "@assets/icons/moon.svg";

interface Page {
    name: string;
    href: string;
}

const logo = {name: "Yadobler", href: "/"}

const pages : [Page] = [
    {name: "About Me", href: "/about"},
    {name: "Blog",     href: "/blog"},
    {name: "Showcase", href: "/showcase"},
    {name: "Contact",  href: "/contactme"}
]

const currentPath = Astro.url.pathname.split('/').slice(0, 2).join('/');
const indicator = p => (currentPath === p.href ? "bg-gradient-to-r from-blue-500 via-violet-800 to-red-500 text-transparent bg-clip-text dark:bg-gradient-to-r dark:from-blue-500 dark:via-violet-800 dark:to-red-500 dark:text-transparent dark:bg-clip-text" : "bg-transparent dark:bg-transparent");
---
<header class="relative max-h-screen flex flex-col bg-secondary-bg-light dark:bg-secondary-bg-dark items-center">
    <div class="max-w-[90ch] w-full flex flex-row items-center p-4 justify-between">
        <!-- logo -->
        <div class="text-lg font-semibold items-start">
            <a href={logo.href} class={indicator(logo) + "self-center text-2xl font-semibold whitespace-nowrap text-primary-fg-light dark:text-primary-fg-dark bg-clip-text"}>{logo.name}</a>
        </div>

        <!-- wide screen navbar -->
        <nav class="hidden sm:flex sm:flex-row text-lg gap-4">
            {pages.map(page => (
            <a href={page.href} class={indicator(page) + " text-primary-fg-light dark:text-primary-fg-dark"}>{page.name}</a>
            ))}
            <!-- Dark Mode Toggle -->
            <button id="theme-toggle" class="w-8 h-8 flex items-center justify-center text-primary-fg-light dark:text-primary-fg-dark">
                <span id="theme-icon">
                    <MoonIcon class="hidden dark:block w-6 h-6" />
                    <SunIcon class="block dark:hidden w-6 h-6" />
                </span>
            </button>
        </nav>

        <!-- toggle navbar -->
        <div id="toggle-navmenu" class="flex flex-row sm:hidden">
            <span id="menu-open" class="text-xl fill-current text-primary-fg-light dark:text-primary-fg-dark"> <OpenIcon /> </span>
            <span id="menu-close" class="hidden text-xl fill-current text-primary-fg-light dark:text-primary-fg-dark"> <CloseIcon /> </span>
        </div>
    </div>

    <!-- small screen navbar -->
    <div id="mobile-menu" class="hidden absolute top-full right-0 h-max shadow-md z-50 bg-secondary-bg-light dark:bg-secondary-bg-dark">
        <nav class="flex flex-col items-end text-lg gap-4 p-4">
            <!-- Dark Mode Toggle -->
            <button id="theme-toggle" class="w-8 h-8 flex items-center justify-center text-primary-fg-light dark:text-primary-fg-dark">
                <span id="theme-icon">
                    <MoonIcon class="hidden dark:block w-6 h-6" />
                    <SunIcon class="block dark:hidden w-6 h-6" />
                </span>
            </button>
            {pages.map(page => (
            <a href={page.href} class={indicator(page) + " text-primary-fg-light dark:text-primary-fg-dark"}>{page.name}</a>
            ))}
        </nav>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const menuToggle = document.querySelector("#toggle-navmenu");
        const menuOpen = document.querySelector("#menu-open");
        const menuClose = document.querySelector("#menu-close");
        const mobileMenu = document.querySelector("#mobile-menu");
        if (menuToggle == null) return
        if (mobileMenu == null) return
        if (menuClose == null) return
        if (menuOpen == null) return

        menuToggle.addEventListener("click", () => {
            const isMenuVisible = !mobileMenu.classList.contains("hidden");

            // Toggle visibility of the mobile menu
            mobileMenu.classList.toggle("hidden");

            // Toggle buttons
            menuOpen.classList.toggle("hidden", !isMenuVisible);
            menuClose.classList.toggle("hidden", isMenuVisible);
        });
    });

    document.addEventListener("DOMContentLoaded", () => {
        const themeToggles = document.querySelectorAll("#theme-toggle"); // Select all toggle buttons
        const htmlElement = document.documentElement;

        // Set theme based on system preference or saved user choice
        const storedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

        if (storedTheme) {
            htmlElement.classList.toggle("dark", storedTheme === "dark");
        } else {
            htmlElement.classList.toggle("dark", prefersDark);
        }

        // Function to toggle theme
        function toggleTheme() {
            const isDark = htmlElement.classList.toggle("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        }

        // Add event listener to both toggle buttons (wide-screen + mobile menu)
        themeToggles.forEach(btn => btn.addEventListener("click", toggleTheme));
    });
    </script>
</header>
