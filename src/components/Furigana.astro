---
export interface Props {
  hanzi: string; // The Hanzi string, e.g., "你哋好"
  jyutping: string; // The Jyutping string, e.g., "nei5 dei6 hou2"
  combine?: boolean;  // Optional: if true, adds the furigana across the hanzi. Defaults to false.
}

// Get the props passed to this component
const { hanzi, jyutping, combine = false } = Astro.props; // Default combine to false

// Function to process Hanzi and Jyutping
function processFurigana(hanzi: string, jyutping: string, combine: boolean) {
  if (combine) {
    // If combine is true, return a single pair for the whole string
    return [{ char: hanzi, annotation: jyutping }];
  } else {
    // Original logic: one char to one word
    const characters = hanzi.split(""); // Splits Hanzi into individual characters
    const annotations = jyutping.split(" "); // Splits Jyutping into annotations

    if (characters.length !== annotations.length) {
      console.warn("Hanzi and Jyutping lengths do not match when combine is false. Please check your inputs.");
      // You might want to handle this error more robustly, e.g., throw an error
      return characters.map((char, i) => ({ char, annotation: annotations[i] || '' })); // Fallback
    }
    return characters.map((char, i) => ({ char, annotation: annotations[i] }));
  }
}

// Compute the `pairs` array based on the combine prop
const pairs = processFurigana(hanzi, jyutping, combine);
---

<style>
/* Base styles for furigana container */
fg {
  display: inline-block;
  text-align: center;
  line-height: 1;
  top: 0.2em;
  margin-top: 0.5em; /* Add vertical spacing for furigana */
  padding: 0em 0.4em;
  position: relative;
  vertical-align: bottom; /* Align the base characters nicely */
}

/* Styles for the annotation (jyutping) */
fg:before {
  content: attr(t); /* Displays the annotation */
  display: block;
  font-size: 60%; /* Smaller size for the Jyutping */
  text-align: center;
  line-height: 1;
  position: absolute;
  top: -1.2em; /* Adjust this value to control the vertical placement of furigana */
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap; /* Prevent annotation from wrapping */
}

/* Specific styles for when combining furigana */
fg.combined {
  /* space left here in case padding or formatting is required */
}
</style>

<span>
  {pairs.map(({ char, annotation }) => (
    <fg t={annotation} class:list={{ 'combined': combine }}>{char}</fg>
  ))}
</span>