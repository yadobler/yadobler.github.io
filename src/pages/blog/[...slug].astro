---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '@layouts/Layout.astro';
import FormattedDate from '@components/FormattedDate.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        props: post, // Pass the post as props
    }));
}

// Ensure `post` is passed via props
const post = Astro.props;
const { Content } = await render(post);
const { title, author, pubDate, modDate, heroImage, description, tags } = post.data;
---

<Layout title={title} description={description}>
    <h1>{title}</h1>
    <div class="grid grid-rows-2 justify-around">
        <div class="grow text-center">
            By: {author} on <FormattedDate date={pubDate} />
            {modDate && (
            <span class="text-gray-600"> 
                ( Updated: <FormattedDate date={modDate} />)
            </span>
            )}
        </div>
        <div class="flex flex-row flex-wrap justify-center gap-2">
            {tags.map((t: String) => (
            <span class="bg-red-100 shadow-md rounded-xl p-2">{t}</span>
            ))}
        </div>
    </div>

    <div class="flex flex-col justify-center">
        <div> {heroImage && <Image src={heroImage} alt={description} class="shadow:md w-full" />} </div>
        <div class="px-5"> <Content /> </div>
    </div>
</Layout>
