---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '@layouts/Layout.astro';
import FormattedDate from '@components/FormattedDate.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');
    return posts.map((post) => ({
        params: { slug: post.id },
        props: post, // Pass the post as props
    }));
}

// Ensure `post` is passed via props
const post = Astro.props;
const { Content } = await render(post);
const { title, author, pubDate, modDate, heroImage, description, tags } = post.data;
---

<Layout title={title} description={description}>
    <h1>{title}</h1> 
    <div class="grid grid-rows-2 justify-around">
        <div class="grow text-center">
            <p>
                By: {author} on <FormattedDate date={pubDate} />
                {modDate && (
                    <span> 
                        ( Updated: <FormattedDate date={modDate} />)
                    </span>
                )}
            </p>
        </div>
        <div class="flex flex-row flex-wrap justify-center gap-2">
            {tags.map((t: string) => (
                <span class="bg-red-100 text-black shadow-md rounded-xl p-2 h-fit">{t}</span>
            ))}
        </div>
    </div>

    <div class="flex flex-col justify-center">
        <div> 
            {heroImage && (
                <Image 
                    src={heroImage} 
                    alt={description} 
                    class="shadow-md rounded-lg w-full" 
                />
            )} 
        </div>
        <div> <Content /> </div>
    </div>
</Layout>