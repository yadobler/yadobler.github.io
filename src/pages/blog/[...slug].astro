---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import Prose from '@components/Prose.astro';
import Layout from '@layouts/Layout.astro';
import FormattedDate from '@components/FormattedDate.astro';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post, // Pass the post as props
	}));
}

// Ensure `post` is passed via props
const post = Astro.props;
const { Content } = await render(post);
const { title, author, pubDate, modDate, heroImage, description, tags } = post.data;
---

<Layout title={title}>
    <div class="flex flex-col w-dvw px-10 gap-5 grow">
        <h1>{title}</h1>
        <h3>
            By: {author} on <FormattedDate date={pubDate} />
            {modDate && (
                <span> (Updated: <FormattedDate date={modDate} />)</span>
            )}
        </h3>
        <div class="flex flex-row flex-wrap gap-2">
            {tags.map((t) => (
                <span class="bg-red-100 shadow-md">{t}</span>
            ))}
        </div>
        <div class="p-10 leading-relaxed">
            <Prose>
                <Content />
            </Prose>
        </div>
    </div>
</Layout>
